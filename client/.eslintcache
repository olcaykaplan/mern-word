[{"F:\\Git Proje\\mern-word\\client\\src\\index.js":"1","F:\\Git Proje\\mern-word\\client\\src\\App.js":"2","F:\\Git Proje\\mern-word\\client\\src\\reducers\\index.js":"3","F:\\Git Proje\\mern-word\\client\\src\\actions\\wordsAction.js":"4","F:\\Git Proje\\mern-word\\client\\src\\layouts\\Navigation\\AppBar.js":"5","F:\\Git Proje\\mern-word\\client\\src\\components\\WordForm\\WordForm.js":"6","F:\\Git Proje\\mern-word\\client\\src\\components\\UploadWordsCollectively\\UploadWordsCollectively.js":"7","F:\\Git Proje\\mern-word\\client\\src\\components\\Words\\Words.js":"8","F:\\Git Proje\\mern-word\\client\\src\\reducers\\words.js":"9","F:\\Git Proje\\mern-word\\client\\src\\constants\\actionTypes.js":"10","F:\\Git Proje\\mern-word\\client\\src\\components\\Words\\Word\\Word.js":"11","F:\\Git Proje\\mern-word\\client\\src\\components\\UI Components\\NewTextArea\\NewTextArea.js":"12","F:\\Git Proje\\mern-word\\client\\src\\api\\index.js":"13","F:\\Git Proje\\mern-word\\client\\src\\components\\Auth\\Auth.js":"14","F:\\Git Proje\\mern-word\\client\\src\\components\\UI Components\\Input\\Input.js":"15","F:\\Git Proje\\mern-word\\client\\src\\components\\Auth\\iconGoogle.js":"16"},{"size":560,"mtime":1610232014255,"results":"17","hashOfConfig":"18"},{"size":1346,"mtime":1612047492298,"results":"19","hashOfConfig":"18"},{"size":115,"mtime":1610147617994,"results":"20","hashOfConfig":"18"},{"size":883,"mtime":1612302531722,"results":"21","hashOfConfig":"18"},{"size":1824,"mtime":1612047810907,"results":"22","hashOfConfig":"18"},{"size":3896,"mtime":1611519462031,"results":"23","hashOfConfig":"18"},{"size":4182,"mtime":1610819482879,"results":"24","hashOfConfig":"18"},{"size":501,"mtime":1610233697841,"results":"25","hashOfConfig":"18"},{"size":349,"mtime":1610206215676,"results":"26","hashOfConfig":"18"},{"size":90,"mtime":1610206113468,"results":"27","hashOfConfig":"18"},{"size":1351,"mtime":1610235681984,"results":"28","hashOfConfig":"18"},{"size":1472,"mtime":1611862969345,"results":"29","hashOfConfig":"18"},{"size":309,"mtime":1610317445984,"results":"30","hashOfConfig":"18"},{"size":3149,"mtime":1612304242585,"results":"31","hashOfConfig":"18"},{"size":1074,"mtime":1612048064707,"results":"32","hashOfConfig":"18"},{"size":1408,"mtime":1612303994378,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"eqrtp8",{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"36"},"F:\\Git Proje\\mern-word\\client\\src\\index.js",[],["76","77"],"F:\\Git Proje\\mern-word\\client\\src\\App.js",["78","79"],"import React, {useEffect} from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getWords} from './actions/wordsAction';\r\nimport {Switch, Route, NavLink, Link, Redirect} from 'react-router-dom';\r\nimport {Container} from \"react-bootstrap\";\r\n\r\n\r\nimport AppBar  from './layouts/Navigation/AppBar';\r\nimport WordForm from './components/WordForm/WordForm';\r\nimport  Words from './components/Words/Words';\r\nimport UploadWordsCollectively from \"./components/UploadWordsCollectively/UploadWordsCollectively\";\r\nimport Auth from './components/Auth/Auth';\r\n\r\nconst App = () =>  {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getWords());\r\n    }, [dispatch])\r\n\r\n        return (\r\n            <Container >\r\n                <AppBar />\r\n                <Switch>\r\n                    <Route  path={\"/words\"} exact component={Words} />\r\n                    <Route path={\"/words/word/newWord\"} component={WordForm} />\r\n                    <Route path={\"/words/word/:wordID\"} exact  component={WordForm} />\r\n                    <Route path={\"/words/uploadWords\"} exact  component = {UploadWordsCollectively} />\r\n                    <Route path={\"/auth\"} exact component={Auth} />\r\n                    <Redirect to={\"/words\"}  />\r\n                </Switch>\r\n            </Container>\r\n        );\r\n\r\n}\r\n\r\nexport default App;","F:\\Git Proje\\mern-word\\client\\src\\reducers\\index.js",[],"F:\\Git Proje\\mern-word\\client\\src\\actions\\wordsAction.js",[],"F:\\Git Proje\\mern-word\\client\\src\\layouts\\Navigation\\AppBar.js",["80","81"],"import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport classes from './AppBar.module.css';\r\nimport {Typography, AppBar, Toolbar, Button, Avatar} from \"@material-ui/core\";\r\n\r\nconst AppBarComponent = () => {\r\n    const user = null;\r\n    return(\r\n        <AppBar position=\"static\" color=\"inherit\">\r\n            <div>\r\n                <Typography component={Link} to={\"/\"} variant={\"h4\"}  align=\"center\">Memories</Typography>\r\n            </div>\r\n            <Toolbar>\r\n                {user ?\r\n                    (<div>\r\n                            <Avatar alt={user.result.name} src={user.result.imageUrl}>{user.result.name.charAt(0)}</Avatar>\r\n                        <Typography  variant={\"h6\"}>{user.result.name}</Typography>\r\n                        <Button variant=\"contained\" color={\"secondary\"}>Logout </Button>\r\n                    </div>) : (\r\n                        <Button componenet={Link} to={\"/auth\"} variant={\"contained\"} color={\"primary\"}>Sign In </Button>\r\n                    )\r\n                }\r\n            </Toolbar>\r\n        </AppBar>\r\n\r\n    )\r\n}\r\n\r\nexport default  AppBarComponent;\r\n\r\n{/* <Navbar bg=\"primary\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n           <NavLink to={'/words'} className={classes.NavLink}>Words</NavLink>\r\n           <NavLink to={'/'} className={classes.NavLink}></NavLink>\r\n            <NavLink to={'/words/word/newWord'} className={classes.NavLink}>New Word</NavLink>\r\n            <NavLink to={'/words/uploadWords'} className={classes.NavLink}>Upload Words</NavLink>\r\n\r\n       </Nav>\r\n       <Form inline>\r\n           <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n             <Button variant=\"outline-light\">Search</Button>\r\n        </Form>\r\n     </Navbar> */}","F:\\Git Proje\\mern-word\\client\\src\\components\\WordForm\\WordForm.js",["82","83","84","85"],"import React, {useEffect, useState} from \"react\";\r\nimport {Button, Container, Form,} from 'react-bootstrap';\r\nimport classes from './WordForm.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createWord} from \"../../actions/wordsAction\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport words from \"../../reducers/words\";\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport NewTextArea from '../UI Components/NewTextArea/NewTextArea';\r\n\r\nconst WordForm  =  ({match}) => {\r\n    const [wordState, setWordState] = useState({name:'', description:'', examples:[]});\r\n  const [examples, setExamples]=useState([]);\r\n    const dispatch =  useDispatch();\r\n    const wordID = match.params.wordID;\r\n    const wordData =   useSelector((state) => wordID ? state.words.find(w => w._id==wordID): null);\r\n    const [count, setCount] = useState(0);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(createWord(wordState));\r\n        clearForm();\r\n    }\r\n\r\n    const clearForm = () => {\r\n       // setWordState({name:'', description:'', examples:[]})\r\n        console.table(wordState.examples);\r\n    }\r\n\r\n    const  addTextArea = () => {\r\n        let newText = <NewTextArea index={count} exampleValue={wordState.examples[count]} setWordState={setWordState} wordState={wordState}  removeExample ={() => removeExample(count)} />\r\n        examples.push(newText);\r\n        //Count will help to find target example in the array.\r\n        setCount(count+1)\r\n\r\n    }\r\n    const removeExample = (index) => {\r\n        // Edit UI Examples textarea array\r\n        alert(index);\r\n        const newExamplesUI = examples.filter((ex, i ) => i !== index);\r\n        setExamples(newExamplesUI);\r\n\r\n        //Edit wordState example array\r\n        const newExamples = wordState.examples.filter((ex, i) => i !== index);\r\n        console.log(\" 47 satır NEW EXAMPLES \",newExamples);\r\n        setWordState({\r\n            ...wordState, examples: newExamples\r\n        });\r\n    }\r\n\r\n          // UPDATE OPERATION WILL TRIGGER HERE\r\n    return(\r\n         <Container className={classes.container}>\r\n            <Form className={classes.formbody} onSubmit={handleSubmit}>\r\n                <h2>ADD NEW WORD</h2>\r\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                    <Form.Label>Word Name</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Word Name\"\r\n                         value={wordState.name}\r\n                         onChange={(e) => setWordState({...wordState, name: e.target.value})}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group id={\"examples\"} controlId=\"exampleForm.ControlTextarea1\">\r\n\r\n                    <Form.Label>Word Description</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} placeholder=\"Describe it\"\r\n                          value={wordState.description}\r\n                          onChange={(e) => setWordState({...wordState, description: e.target.value})}\r\n                    />\r\n                </Form.Group>\r\n\r\n\r\n       <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n           {/*  New Example BUTTON HERE  +++  */ }\r\n           {/* ADD DYNAMIC TEXTAREA EXAMPLE   +++   */}\r\n           {/* REMOVE DYNAMIC TEXTAREA EXAMPLE --- */}\r\n        <Form.Label><AddCircleOutlineIcon style={{ color: green[500], fontSize:30, marginBottom: \"15px\" }} onClick={addTextArea}/> New Example</Form.Label>\r\n           {\r\n               examples.map(t => (\r\n                   t\r\n               ))\r\n\r\n           }\r\n       </Form.Group>\r\n    <Button variant={'primary'} type={'submit'} size={\"lg\"} >Create </Button>\r\n    <Button variant={'primary'} type={'button'} size={\"lg\"} onClick={clearForm}>Clear</Button>\r\n    {/* CLEAR BUTTON HERE */ }\r\n</Form>\r\n</Container>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default WordForm;\r\n","F:\\Git Proje\\mern-word\\client\\src\\components\\UploadWordsCollectively\\UploadWordsCollectively.js",["86","87","88","89","90","91"],"import React, {useState} from \"react\";\r\nimport * as XLSX from 'xlsx';\r\nimport {Container, Form, Table, Button} from \"react-bootstrap\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {uploadWordsCollectively} from '../../actions/wordsAction';\r\n\r\nconst UploadWordsCollectively = () =>  {\r\n    const [selectedFile, setSelectedFile] = useState('');\r\n    const [uploadWords, setUploadWords] = useState([]);\r\n    const [headers, setHeader] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    const readExcel = (e) => {\r\n\r\n\r\n      //  console.log(\"files 0\",e.target.files[0]);\r\n       // console.log(\"result\",e.target.result);\r\n       // const file = e.target.files[0];\r\n        const file =  {...selectedFile.name};\r\n        console.log(file);\r\n      /* const promise = new Promise((resolve, reject) => {\r\n            const fileReader = new FileReader();\r\n            fileReader.readAsArrayBuffer(file);\r\n\r\n            fileReader.onload = (e) =>{\r\n                console.log(\"result in fnc \",e.target.result);\r\n                const bufferArray = e.target.result;\r\n                const  workbook = XLSX.read(bufferArray, {type:'buffer'});\r\n                const worksheetName= workbook.SheetNames[0];\r\n                const workseet = workbook.Sheets[worksheetName];\r\n                const  data = XLSX.utils.sheet_to_json(workseet);\r\n                resolve(data);\r\n            };\r\n            fileReader.onerror = (err) => {\r\n                reject(err);\r\n            }\r\n        });\r\n\r\n        setSelectedFile(null);\r\n\r\n        promise.then((items) => {\r\n\r\n           // dispatch(uploadWordsCollectively(items));\r\n             const aryHeader = [];\r\n              Object.getOwnPropertyNames(items[0]).map((x, index) => {\r\n                  if (index === 0) return\r\n                  aryHeader.push(x);\r\n              })\r\n              setHeader(aryHeader);\r\n              setUploadWords(items);\r\n        });*/\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <p className=\"mt-5 mb-3\">Choose The Uploading File (name, description, examples) </p>\r\n                <Form.File\r\n                    id=\"custom-file\"\r\n                    label=\"Custom file input\"\r\n                    className={\"mb-5\"}\r\n                    custom\r\n                    onChange={(e) => setSelectedFile({name: e.target.files[0]}) }\r\n                />\r\n                <Button type={\"submit\"} onClick={readExcel} >Upload</Button>\r\n            {/* Example FILE HERE*/}\r\n            <Table striped bordered hover>\r\n                <thead>\r\n                    <th>Uploading Fields</th>\r\n                    <th>Fields</th>\r\n                    <th>Matches</th>\r\n                </thead>\r\n                <tbody>\r\n                    {headers.map(h => (\r\n                      <tr>\r\n                          <td>{h}</td>\r\n                          <td><select className=\"form-control\" id=\"exampleFormControlSelect1\">\r\n                              <option>1</option>\r\n                              <option>2</option>\r\n                              <option>3</option>\r\n                              <option>4</option>\r\n                              <option>5</option>\r\n                          </select></td>\r\n                          <td></td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n            {/* HEADERS ARE MATCHED OR NOT (FORM)\r\n              <h2>YOUR UPLOAD FILE</h2>\r\n              <Table striped bordered hover>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    {headers.map(header => (\r\n                        <th> {header}</th>\r\n                    ))}\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {uploadWords.map((word, index) => (\r\n                    <tr>\r\n                        <td>{index+1}</td>\r\n                        <td>{word.deneme}</td>\r\n                        <td>{word.ad}</td>\r\n                        <td>{word.soyad}</td>\r\n                    </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table> */}\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nexport default UploadWordsCollectively;","F:\\Git Proje\\mern-word\\client\\src\\components\\Words\\Words.js",["92"],"import React from \"react\";\r\nimport { useSelector} from'react-redux';\r\nimport  Word from './Word/Word';\r\nimport classes from './Words.module.css';\r\nimport {Container} from \"react-bootstrap\";\r\nconst Words = (props) => {\r\n    const words = useSelector((state) => state.words);\r\n\r\n    return (\r\n        <div  className={classes.wordList}>\r\n            {words.map((word, index) => (\r\n               < Word word={word} index ={index} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default  Words;\r\n","F:\\Git Proje\\mern-word\\client\\src\\reducers\\words.js",["93"],"import * as actionTypes from '../constants/actionTypes';\r\n\r\nexport default (words = [], action) => {\r\n    switch (action.type){\r\n        case actionTypes.FETCH_WORDS:\r\n            return action.payload;\r\n        case actionTypes.CREATE_NEW_WORD:\r\n            return [...words, action.payload];\r\n        default:\r\n            return  words;\r\n    }\r\n}","F:\\Git Proje\\mern-word\\client\\src\\constants\\actionTypes.js",[],"F:\\Git Proje\\mern-word\\client\\src\\components\\Words\\Word\\Word.js",["94"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Card, Button,} from 'react-bootstrap';\r\nimport logo from '../../../logo192.png';\r\nimport classes from './Words.module.css';\r\n\r\nimport {withRouter} from 'react-router-dom';\r\nconst Word = ({word, index, history}) => {\r\n//const Word = (props) => {\r\n    const cardsColor= ['success', 'warning', 'info' ];\r\n    const  variant =  cardsColor[index%cardsColor.length];;\r\n\r\n    const handleClick = () => {\r\n        history.push(`/words/word/${word._id}`);\r\n    }\r\n    return(\r\n\r\n            <Card\r\n                bg={variant.toLowerCase()}\r\n                key={word._id}\r\n                text={variant.toLowerCase() === 'light' ? 'dark' : 'white'}\r\n                className={[\"mb-2\", classes.Card]}\r\n            >\r\n                <Card.Header><b>Lern Up</b></Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title> {word.name} </Card.Title>\r\n                    <hr/>\r\n                    <Card.Text>\r\n                        {word.description}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                <Button >Details</Button>\r\n                <Button onClick={handleClick}>Update</Button>\r\n                </Card.Footer>\r\n            </Card>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport  default  withRouter(Word);\r\n","F:\\Git Proje\\mern-word\\client\\src\\components\\UI Components\\NewTextArea\\NewTextArea.js",["95","96","97"],"import React from 'react';\r\nimport {Form} from \"react-bootstrap\";\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport {green, red} from \"@material-ui/core/colors\";\r\nimport {Grid, InputLabel, TextField} from \"@material-ui/core\";\r\nconst examplePlaceHolder = \"\";\r\nconst NewTextArea = ({exampleValue, setWordState, wordState , index, removeExample} ) => {\r\n\r\n        const setChange = (e) => {\r\n            const updateWordState = {...wordState};\r\n            updateWordState.examples[index] = e.target.value;\r\n            setWordState(updateWordState);\r\n        }\r\n\r\n    return(\r\n        <Grid\r\n        container\r\n        lg={12}\r\n        >\r\n            <Grid item lg={1}>\r\n                <InputLabel><RemoveCircleOutlineIcon style={{ color: red[500], fontSize:30 }} onClick={removeExample} /> </InputLabel>\r\n            </Grid>\r\n\r\n            <Grid\r\n                item\r\n                lg={11}\r\n            >\r\n            <TextField key={index}\r\n                       variant={\"outlined\"}\r\n                       multiline\r\n                       fullWidth\r\n                       rows={3}\r\n                       rowsMax={3}\r\n                       placeholder={\"You can write more than one example. If you want to do, Click New Example\"}\r\n                       value={exampleValue}\r\n                       onChange={e => setChange(e)}\r\n            />\r\n            </Grid>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default NewTextArea;","F:\\Git Proje\\mern-word\\client\\src\\api\\index.js",[],"F:\\Git Proje\\mern-word\\client\\src\\components\\Auth\\Auth.js",["98","99"],"F:\\Git Proje\\mern-word\\client\\src\\components\\UI Components\\Input\\Input.js",[],"F:\\Git Proje\\mern-word\\client\\src\\components\\Auth\\iconGoogle.js",["100","101","102","103","104"],"import React from 'react';\r\n\r\nconst iconGoogle = () => (\r\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n\t viewBox=\"0 0 512 512\" style=\"enable-background:new 0 0 512 512;\" xml:space=\"preserve\">\r\n<path style=\"fill:#FBBB00;\" d=\"M113.47,309.408L95.648,375.94l-65.139,1.378C11.042,341.211,0,299.9,0,256\r\n\tc0-42.451,10.324-82.483,28.624-117.732h0.014l57.992,10.632l25.404,57.644c-5.317,15.501-8.215,32.141-8.215,49.456\r\n\tC103.821,274.792,107.225,292.797,113.47,309.408z\"/>\r\n<path style=\"fill:#518EF8;\" d=\"M507.527,208.176C510.467,223.662,512,239.655,512,256c0,18.328-1.927,36.206-5.598,53.451\r\n\tc-12.462,58.683-45.025,109.925-90.134,146.187l-0.014-0.014l-73.044-3.727l-10.338-64.535\r\n\tc29.932-17.554,53.324-45.025,65.646-77.911h-136.89V208.176h138.887L507.527,208.176L507.527,208.176z\"/>\r\n<path style=\"fill:#28B446;\" d=\"M416.253,455.624l0.014,0.014C372.396,490.901,316.666,512,256,512\r\n\tc-97.491,0-182.252-54.491-225.491-134.681l82.961-67.91c21.619,57.698,77.278,98.771,142.53,98.771\r\n\tc28.047,0,54.323-7.582,76.87-20.818L416.253,455.624z\"/>\r\n<path style=\"fill:#F14336;\" d=\"M419.404,58.936l-82.933,67.896c-23.335-14.586-50.919-23.012-80.471-23.012\r\n\tc-66.729,0-123.429,42.957-143.965,102.724l-83.397-68.276h-0.014C71.23,56.123,157.06,0,256,0\r\n\tC318.115,0,375.068,22.126,419.404,58.936z\"/>\r\n</svg>\r\n);\r\n\r\nexport default  iconGoogle();",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":4,"column":24,"nodeType":"111","messageId":"112","endLine":4,"endColumn":31},{"ruleId":"109","severity":1,"message":"113","line":4,"column":33,"nodeType":"111","messageId":"112","endLine":4,"endColumn":37},{"ruleId":"109","severity":1,"message":"114","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":15},{"ruleId":"115","severity":1,"message":"116","line":31,"column":1,"nodeType":"117","messageId":"118","endLine":44,"endColumn":19},{"ruleId":"109","severity":1,"message":"119","line":1,"column":16,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"120","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":13},{"ruleId":"109","severity":1,"message":"121","line":16,"column":11,"nodeType":"111","messageId":"112","endLine":16,"endColumn":19},{"ruleId":"122","severity":1,"message":"123","line":16,"column":83,"nodeType":"124","messageId":"125","endLine":16,"endColumn":85},{"ruleId":"109","severity":1,"message":"126","line":2,"column":13,"nodeType":"111","messageId":"112","endLine":2,"endColumn":17},{"ruleId":"109","severity":1,"message":"127","line":5,"column":9,"nodeType":"111","messageId":"112","endLine":5,"endColumn":32},{"ruleId":"109","severity":1,"message":"128","line":9,"column":12,"nodeType":"111","messageId":"112","endLine":9,"endColumn":23},{"ruleId":"109","severity":1,"message":"129","line":9,"column":25,"nodeType":"111","messageId":"112","endLine":9,"endColumn":39},{"ruleId":"109","severity":1,"message":"130","line":10,"column":21,"nodeType":"111","messageId":"112","endLine":10,"endColumn":30},{"ruleId":"109","severity":1,"message":"131","line":11,"column":11,"nodeType":"111","messageId":"112","endLine":11,"endColumn":19},{"ruleId":"109","severity":1,"message":"132","line":5,"column":9,"nodeType":"111","messageId":"112","endLine":5,"endColumn":18},{"ruleId":"133","severity":1,"message":"134","line":3,"column":1,"nodeType":"135","endLine":12,"endColumn":2},{"ruleId":"109","severity":1,"message":"136","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":12},{"ruleId":"109","severity":1,"message":"137","line":2,"column":9,"nodeType":"111","messageId":"112","endLine":2,"endColumn":13},{"ruleId":"109","severity":1,"message":"138","line":4,"column":9,"nodeType":"111","messageId":"112","endLine":4,"endColumn":14},{"ruleId":"109","severity":1,"message":"139","line":6,"column":7,"nodeType":"111","messageId":"112","endLine":6,"endColumn":25},{"ruleId":"109","severity":1,"message":"140","line":15,"column":11,"nodeType":"111","messageId":"112","endLine":15,"endColumn":19},{"ruleId":"109","severity":1,"message":"141","line":15,"column":21,"nodeType":"111","messageId":"112","endLine":15,"endColumn":32},{"ruleId":"142","severity":1,"message":"143","line":5,"column":25,"nodeType":"144","endLine":5,"endColumn":67},{"ruleId":"142","severity":1,"message":"143","line":6,"column":7,"nodeType":"144","endLine":6,"endColumn":28},{"ruleId":"142","severity":1,"message":"143","line":9,"column":7,"nodeType":"144","endLine":9,"endColumn":28},{"ruleId":"142","severity":1,"message":"143","line":12,"column":7,"nodeType":"144","endLine":12,"endColumn":28},{"ruleId":"142","severity":1,"message":"143","line":15,"column":7,"nodeType":"144","endLine":15,"endColumn":28},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'classes' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useEffect' is defined but never used.","'words' is defined but never used.","'wordData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'XLSX' is defined but never used.","'uploadWordsCollectively' is defined but never used.","'uploadWords' is assigned a value but never used.","'setUploadWords' is assigned a value but never used.","'setHeader' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Container' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'logo' is defined but never used.","'Form' is defined but never used.","'green' is defined but never used.","'examplePlaceHolder' is assigned a value but never used.","'formData' is assigned a value but never used.","'setFormData' is assigned a value but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","no-global-assign","no-unsafe-negation"]